{"ast":null,"code":"import { formatter } from \"./isomorphic.node\";\nimport { Ono, ono } from \"./ono\";\nimport { toJSON as _toJSON } from \"./to-json\"; // Create Ono instances for each of the JavaScript error types\n\nono.error = new Ono(Error);\nono.eval = new Ono(EvalError);\nono.range = new Ono(RangeError);\nono.reference = new Ono(ReferenceError);\nono.syntax = new Ono(SyntaxError);\nono.type = new Ono(TypeError);\nono.uri = new Ono(URIError); // Default to Node's `util.format()` functionality, but allow users to substitute their own\n\nono.formatter = formatter;\n/**\n * Returns an object containing all properties of the given Error object,\n * which can be used with `JSON.stringify()`.\n */\n\nOno.toJSON = function toJSON(error) {\n  return _toJSON.call(error);\n}; // Export the Ono singleton and the Ono constructor as named exports\n\n\nexport { ono, Ono }; // tslint:disable-next-line: no-default-export\n\nexport default ono; // CommonJS default export hack\n\nif (typeof module === \"object\" && typeof module.exports === \"object\") {\n  module.exports = Object.assign(module.exports.default, module.exports); // tslint:disable-line: no-unsafe-any\n}","map":null,"metadata":{},"sourceType":"module"}