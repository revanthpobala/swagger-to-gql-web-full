{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Argument = _interopRequireDefault(require(\"./Argument\"));\n\nvar _TypeLink = _interopRequireDefault(require(\"./TypeLink\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SearchResults =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchResults, _React$Component);\n\n  function SearchResults() {\n    _classCallCheck(this, SearchResults);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchResults).apply(this, arguments));\n  }\n\n  _createClass(SearchResults, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.schema !== nextProps.schema || this.props.searchValue !== nextProps.searchValue;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var searchValue = this.props.searchValue;\n      var withinType = this.props.withinType;\n      var schema = this.props.schema;\n      var onClickType = this.props.onClickType;\n      var onClickField = this.props.onClickField;\n      var matchedWithin = [];\n      var matchedTypes = [];\n      var matchedFields = [];\n      var typeMap = schema.getTypeMap();\n      var typeNames = Object.keys(typeMap); // Move the within type name to be the first searched.\n\n      if (withinType) {\n        typeNames = typeNames.filter(function (n) {\n          return n !== withinType.name;\n        });\n        typeNames.unshift(withinType.name);\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var typeName = _step.value;\n\n          if (matchedWithin.length + matchedTypes.length + matchedFields.length >= 100) {\n            return \"break\";\n          }\n\n          var type = typeMap[typeName];\n\n          if (withinType !== type && isMatch(typeName, searchValue)) {\n            matchedTypes.push(_react.default.createElement(\"div\", {\n              className: \"doc-category-item\",\n              key: typeName\n            }, _react.default.createElement(_TypeLink.default, {\n              type: type,\n              onClick: onClickType\n            })));\n          }\n\n          if (type.getFields) {\n            var fields = type.getFields();\n            Object.keys(fields).forEach(function (fieldName) {\n              var field = fields[fieldName];\n              var matchingArgs;\n\n              if (!isMatch(fieldName, searchValue)) {\n                if (field.args && field.args.length) {\n                  matchingArgs = field.args.filter(function (arg) {\n                    return isMatch(arg.name, searchValue);\n                  });\n\n                  if (matchingArgs.length === 0) {\n                    return;\n                  }\n                } else {\n                  return;\n                }\n              }\n\n              var match = _react.default.createElement(\"div\", {\n                className: \"doc-category-item\",\n                key: typeName + '.' + fieldName\n              }, withinType !== type && [_react.default.createElement(_TypeLink.default, {\n                key: \"type\",\n                type: type,\n                onClick: onClickType\n              }), '.'], _react.default.createElement(\"a\", {\n                className: \"field-name\",\n                onClick: function onClick(event) {\n                  return onClickField(field, type, event);\n                }\n              }, field.name), matchingArgs && ['(', _react.default.createElement(\"span\", {\n                key: \"args\"\n              }, matchingArgs.map(function (arg) {\n                return _react.default.createElement(_Argument.default, {\n                  key: arg.name,\n                  arg: arg,\n                  onClickType: onClickType,\n                  showDefaultValue: false\n                });\n              })), ')']);\n\n              if (withinType === type) {\n                matchedWithin.push(match);\n              } else {\n                matchedFields.push(match);\n              }\n            });\n          }\n        };\n\n        for (var _iterator = typeNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ret = _loop();\n\n          if (_ret === \"break\") break;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (matchedWithin.length + matchedTypes.length + matchedFields.length === 0) {\n        return _react.default.createElement(\"span\", {\n          className: \"doc-alert-text\"\n        }, 'No results found.');\n      }\n\n      if (withinType && matchedTypes.length + matchedFields.length > 0) {\n        return _react.default.createElement(\"div\", null, matchedWithin, _react.default.createElement(\"div\", {\n          className: \"doc-category\"\n        }, _react.default.createElement(\"div\", {\n          className: \"doc-category-title\"\n        }, 'other results'), matchedTypes, matchedFields));\n      }\n\n      return _react.default.createElement(\"div\", null, matchedWithin, matchedTypes, matchedFields);\n    }\n  }]);\n\n  return SearchResults;\n}(_react.default.Component);\n\nexports.default = SearchResults;\n\n_defineProperty(SearchResults, \"propTypes\", {\n  schema: _propTypes.default.object,\n  withinType: _propTypes.default.object,\n  searchValue: _propTypes.default.string,\n  onClickType: _propTypes.default.func,\n  onClickField: _propTypes.default.func\n});\n\nfunction isMatch(sourceText, searchValue) {\n  try {\n    var escaped = searchValue.replace(/[^_0-9A-Za-z]/g, function (ch) {\n      return '\\\\' + ch;\n    });\n    return sourceText.search(new RegExp(escaped, 'i')) !== -1;\n  } catch (e) {\n    return sourceText.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}